{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    bsPrefix,\n    bsSwitchPrefix,\n    inline = false,\n    disabled = false,\n    isValid = false,\n    isInvalid = false,\n    feedbackTooltip = false,\n    feedback,\n    feedbackType,\n    className,\n    style,\n    title = '',\n    type = 'checkbox',\n    label,\n    children,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'input',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","map":{"version":3,"names":["classNames","React","useContext","useMemo","Feedback","FormCheckInput","FormCheckLabel","FormContext","useBootstrapPrefix","hasChildOfType","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FormCheck","forwardRef","ref","id","bsPrefix","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","className","style","title","type","label","children","as","props","controlId","innerFormContext","hasLabel","input","Provider","value","tooltip","displayName","Object","assign","Input","Label"],"sources":["C:/Users/User/Desktop/포트폴리오/node_modules/react-bootstrap/esm/FormCheck.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}