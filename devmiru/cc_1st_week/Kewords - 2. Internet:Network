# Kewords for Web Application Developer - 2. Internet/Network field

- 목차

---

## 1. 인터넷의 동작 원리

<aside>
💡 **TCP/IP라는 통신 프로토콜을 이용해 정보를 주고받는 컴퓨터 네트워크**

</aside>

개념이 거창하지만 원리는 놀랍게도..

![LSD_0920.jpg](Kewords%20fo%20aa572/LSD_0920.jpg)

위 사진처럼 **그냥 다른 컴퓨터끼리 2대가 연결되어있는 것**으로 생각하면 편하다. 

**사진은 USB로 표현되어있지만, 그 연결이 LAN 케이블(해저 광케이블)로 연결되어 세계 이곳저곳을 연결하고 있다고 생각하면 된다.**

예를 들면, Google이 가지고 있는 컴퓨터에게 Google을 표시해줘! 하고 요청하면 구글이 내 컴퓨터로 Google 웹 페이지에 대해 보내주는 것이다.

즉 Google이 가지고 있는 컴퓨터가 곧 서버고, 그 서버 컴퓨터와 내 컴퓨터 사이에서 데이터를 주고받는데 그 방식 중 하나가 **[TCP/IP 통신 프로토콜 방식](https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%84%B7_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C_%EC%8A%A4%EC%9C%84%ED%8A%B8)**이다. 

![스크린샷 2022-03-27 22.00.44.png](Kewords%20fo%20aa572/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2022-03-27_22.00.44.png)

---

## 2. 브라우저의 동작 원리

![Untitled](Kewords%20fo%20aa572/Untitled.png)

- 브라우저 엔진

예를 들어 사용자 인터페이스의 모듈인 주소창에 도메인을 입력하여 Enter 키를 눌러보자.

위 흐름도처럼 사용자 인터페이스에서 브라우저 엔진을 거쳐 렌더링 엔진으로 정보가 이동한다.

- 렌더링 엔진
    1. HTML의 구문을 분석(파싱)하여 [DOM 트리](https://poiemaweb.com/js-dom)를 생성한다.
    2. CSS 파일을 파싱하여 [CSSOM 트리](https://dkmqflx.github.io/frontend/2020/09/14/jscssom/)를 생성한다. (CSSOM은 말 그대로 CSS+DOM이다)
    3. DOM 트리와 CSSOM 트리를 결합하여 렌더링 트리가 구축되고 배치된다. (화면에서의 정확한 위치와 크기가 계산된다.)
    4. 렌더 트리가 그려진다. UI 백엔드에서 렌더링 트리와 각 노드를 가로지르며 렌더링(화면에 표시)된다.

이 모든 과정이 완료되면 평소에 우리가 보던 웹페이지가 브라우저에 렌더링되어 동작한다.

---

## 3. 도메인

<aside>
💡 외우거나 식별하기 어려운 IP 주소를 [google.com](http://google.com) 처럼 기억하기 쉽게 만들어 주는 네트워크 호스트의 이름

</aside>

**을 의미하지만 정확한 개념으로 접근하면**

<aside>
💡 네임 서버 :  레지스트리(최상위 관리기관)에서 관리하는 하위 호스트 네임을 이르는 말

</aside>

- 예를 들어 [hello.its.me](http://hello.its.me) 라는 주소가 있다면 me가 1차 도메인 (TLD), its가 2차 도메인, hello가 3차 도메인이다. 사실 후자가 정확한 도메인 네임의 개념이다.

---

## 4. DNS와 DNS의 동작 원리

<aside>
💡 **Domain Name System**
주소 입력할때 123.456.789.0 이렇게보단 [myhomepage.com](http://myhomepage.com)가 더 편하잖아요?

</aside>

- 실제 서버는 숫자로 구성된 IP 주소로 통신하지만, 기억하기 쉬운 도메인 주소로 사용하는게 편하니 그 도메인으로 IP 주소로 변환을 담당하는게 DNS이다.

- DNS 동작 원리

1.도메인 주소(예를 들어 google.com)을 주소창에 입력하면 ‘google.com’을 가지고 있는 DNS 서버로 도메인 주소에 대한 요청을 보냄

2. DNS 서버에서 입력받은 도메인을 찾아 IP 주소로 변환한 뒤 웹 브라우저로 다시 전송하여 사용자가 입력한 도메인으로 접속이 가능하다.

---

## 5. 호스팅 (호스팅 서비스)

<aside>
💡 **서버 컴퓨터의 전체 또는 일부 공간을 이용할 수 있도록 임대해 주는 서비스**

</aside>

- 웹 호스팅뿐만이 아니라 메일, 쇼핑몰, 서버 호스팅등 다양한 호스팅 서비스가 존재한다. 쉽게 말해 서버나 웹사이트 따위를 빌려주는 것.